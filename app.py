import streamlit as st
from textblob import TextBlob
from deep_translator import GoogleTranslator

# --- CONFIGURACI√ìN DE P√ÅGINA ---
st.set_page_config(
    page_title="An√°lisis de Texto",
    page_icon="üí¨",
    layout="centered"
)

# --- ESTILOS PERSONALIZADOS ---
st.markdown("""
    <style>
    body {
        background-color: #101820; 
        color: white;
        font-family: 'Segoe UI', sans-serif;
    }
    .stTextInput>div>div>input, textarea {
        background-color: #181f29 !important;
        color: white !important;
        border-radius: 8px !important;
    }
    .stButton>button {
        background-color: #cf1020 !important;
        color: white !important;
        border-radius: 10px !important;
        transition: all 0.3s ease;
    }
    .stButton>button:hover {
        background-color: #a60d1a !important;
        transform: scale(1.02);
    }
    </style>
""", unsafe_allow_html=True)


# --- T√çTULO ---
st.title("üí¨ An√°lisis de Texto con TextBlob")

st.markdown(
    "Esta aplicaci√≥n permite analizar la **polaridad** y **subjetividad** de un texto, "
    "as√≠ como realizar una **correcci√≥n gramatical** en ingl√©s."
)

# --- SIDEBAR ---
with st.sidebar:
    st.subheader("üìò Conceptos clave")
    st.markdown("""
    **Polaridad:**  
    Mide si el sentimiento es positivo, negativo o neutral.  
    Rango: `-1` (muy negativo) ‚Üí `1` (muy positivo).

    **Subjetividad:**  
    Indica cu√°nto del texto es opini√≥n o emoci√≥n.  
    Rango: `0` (objetivo) ‚Üí `1` (muy subjetivo).
    """)

# --- EXPANDER 1: AN√ÅLISIS DE SENTIMIENTOS ---
with st.expander("üß† Analizar Polaridad y Subjetividad en un texto"):
    text1 = st.text_area("‚úçÔ∏è Escribe aqu√≠ tu texto en espa√±ol:")

    if text1:
        # Traducci√≥n al ingl√©s con Deep Translator
        trans_text = GoogleTranslator(source="auto", target="en").translate(text1)

        # An√°lisis con TextBlob
        blob = TextBlob(trans_text)
        polarity = round(blob.sentiment.polarity, 2)
        subjectivity = round(blob.sentiment.subjectivity, 2)

        st.markdown(f"**Polarity:** {polarity}")
        st.markdown(f"**Subjectivity:** {subjectivity}")

        # Interpretaci√≥n de resultados
        if polarity >= 0.5:
            st.success("üòä El texto expresa un sentimiento **positivo**.")
        elif polarity <= -0.5:
            st.error("üòî El texto expresa un sentimiento **negativo**.")
        else:
            st.info("üòê El texto expresa un sentimiento **neutral**.")

        # Interacci√≥n peque√±a
        if st.button("üîÅ Traducir texto al ingl√©s"):
            st.write("**Traducci√≥n autom√°tica:**")
            st.write(trans_text)


# --- EXPANDER 2: CORRECCI√ìN EN INGL√âS ---
with st.expander("üìù Correcci√≥n ortogr√°fica en ingl√©s"):
    text2 = st.text_area("Escribe o pega un texto en ingl√©s:", key="text_correction")

    if text2:
        blob2 = TextBlob(text2)
        corrected_text = str(blob2.correct())

        st.write("**Texto corregido:**")
        st.success(corrected_text)

        # Bot√≥n de comparaci√≥n
        if st.button("üëÄ Mostrar comparaci√≥n"):
            st.write("**Original:**")
            st.code(text2)
            st.write("**Corregido:**")
            st.code(corrected_text)
